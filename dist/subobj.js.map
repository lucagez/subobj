{"version":3,"file":"subobj.js","sources":["../src/subobj.js"],"sourcesContent":["const fs = require('fs');\n\nconst isFormatted = string => string.match('\\n');\n\nconst isValid = string => {\n  try {\n    JSON.parse(string);\n    return true;\n  } catch (e) {\n    throw new Error('invalid JSON');\n  }\n};\n\nconst minify = string => {\n  try {\n    return JSON.stringify(JSON.parse(string));\n  } catch (e) {\n    throw new Error('invalid JSON');\n  }\n};\n\nconst find = (string, regex) => {\n  try {\n    const { index } = string.match(regex);\n    return string.substr(index);\n  } catch(e) {\n    throw new Error('Property not found');\n  }\n};\n\nconst matchBracket = (string, index, brackets, counter = 0) => {\n  const current = string.charAt(index);\n  if (current === brackets[0]) counter += 1;\n  else if (current === brackets[1]) counter -= 1;\n  if (counter === 0) return index;\n  return matchBracket(string, (index += 1), brackets, counter);\n};\n\nconst parse = (string, index = 0) => {\n  const current = string.charAt(index);\n  if (current === ',' || current === '}') return string.substr(0, index);\n  if (current === '[' || current === '{') {\n    const brackets = current === '[' ? ['[', ']'] : ['{', '}'];\n    return string.substr(0, matchBracket(string, index, brackets)) + brackets[1];\n  }\n  return parse(string, (index += 1));\n};\n\nconst subobj = (string, search, params = {}) => {\n  const { pathMode, validate } = params;\n  const raw = pathMode ? fs.readFileSync(string, 'UTF-8') : string;\n  if (validate) isValid(raw);\n  const data = isFormatted(raw) ? minify(raw) : raw;\n  const regex = new RegExp(`\"${search}\":`);\n  const substr = find(data, regex);\n  return `{${parse(substr)}}`;\n};\n\nmodule.exports = subobj;\n"],"names":["const","fs","require","matchBracket","string","index","brackets","counter","current","charAt","parse","substr","module","exports","search","params","raw","readFileSync","validate","JSON","e","Error","isValid","regex","match","find","isFormatted","stringify","minify","RegExp"],"mappings":"AAAAA,IAAMC,EAAKC,QAAQ,MA8BbC,WAAgBC,EAAQC,EAAOC,EAAUC,kBAAU,OACjDC,EAAUJ,EAAOK,OAAOJ,UAC1BG,IAAYF,EAAS,GAAIC,GAAW,EAC/BC,IAAYF,EAAS,KAAIC,GAAW,GAC7B,IAAZA,EAAsBF,EACnBF,EAAaC,EAASC,GAAS,EAAIC,EAAUC,IAGhDG,WAASN,EAAQC,kBAAQ,OACvBG,EAAUJ,EAAOK,OAAOJ,MACd,MAAZG,GAA+B,MAAZA,EAAiB,OAAOJ,EAAOO,OAAO,EAAGN,MAChD,MAAZG,GAA+B,MAAZA,EAAiB,KAChCF,EAAuB,MAAZE,EAAkB,CAAC,IAAK,KAAO,CAAC,IAAK,YAC/CJ,EAAOO,OAAO,EAAGR,EAAaC,EAAQC,EAAOC,IAAaA,EAAS,UAErEI,EAAMN,EAASC,GAAS,IAajCO,OAAOC,iBAVST,EAAQU,EAAQC,kBAAS,qBAEjCC,aAAiBf,EAAGgB,aAAab,EAAQ,SAAWA,EACtDc,YA/CUd,OAEZe,KAAKT,MAAMN,GAEX,MAAOgB,SACD,IAAIC,MAAM,iBA0CJC,CAAQN,OAGhBL,WAjCMP,EAAQmB,aAEAnB,EAAOoB,MAAMD,UACxBnB,EAAOO,gBACd,MAAMS,SACA,IAAIC,MAAM,uBA4BHI,UApDGrB,UAAUA,EAAOoB,MAAM,MAkD5BE,CAAYV,YAvCZZ,cAEJe,KAAKQ,UAAUR,KAAKT,MAAMN,IACjC,MAAOgB,SACD,IAAIC,MAAM,iBAmCcO,CAAOZ,GAAOA,EAChC,IAAIa,WAAWf,mBAElBJ,EAAMC"}